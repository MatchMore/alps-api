swagger: '2.0'
schemes:
  - https
host: api.matchmore.io
basePath: /v4
info:
  description: |
    ## MATCHMORE
    The first version of the MATCHMORE API is an exciting step to allow
    developers use a context-aware pub/sub cloud service.  A lot of mobile
    applications and their use cases may be modeled using this approach and can
    therefore profit form using MATCHMORE as their backend service.
    **Build something great with MATCHMORE!**
    Once you've [registered your
    client](https://dev.matchmore.io/account/register/) it's easy start using our
    awesome cloud based context-aware pub/sub (admitted, a lot of buzzwords).

    ## RESTful API
    We do our best to have all our URLs be
    [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer).
    Every endpoint (URL) may support one of four different http verbs. GET
    requests fetch information about an object, POST requests create objects,
    PUT requests update objects, and finally DELETE requests will delete
    objects.

    ## Domain model

    ### [User](#tag/user)

    ### [Users](#tag/users)

    ### [Device](#tag/device)

    ### [Location](#tag/location)

    ### [Publication](#tag/publication)

    ### [Subscription](#tag/subscription)

    ### [Matches](#tag/matches)

    ## [More about MATCHMORE](https://dev.matchmore.io)

  version: '0.4.0'

  title: MATCHMORE ALPS Core REST API

  termsOfService: 'https://dev.matchmore.io/about/legal/terms/api'
  contact:
    email: apihelp@matchmore.com
    url: 'https://dev.matchmore.io/corporate'
  license:
    name: MIT
  x-logo:
    url: 'https://dev.matchmore.io/static/img/logo/logo_marina_trans_beta.png'
externalDocs:
  description: MatchMore Developer Documentation
  url: 'https://dev.matchmore.com/'
consumes:
  - application/json
produces:
  - application/json
tags:
  - name : user
    description : Manage user
  - name : users
    description: Get information about users
  - name : device
    description : Operation about device
  - name : location
    description : Operation about location
  - name : publication
    description : Operation about publication
  - name : subscription
    description : Operation about subscription
  - name : matches
    description : Operation about matches
securityDefinitions:
  api-key:
    type: apiKey
    in: header
    name: api-key
paths:
  /users:
    get:
      summary: List all users
      operationId: getUsers
      tags:
        - users
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          description: 'How many items to return at one time (1-100, default 100)'
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: An array of users.
          schema:
            $ref: '#/definitions/Users'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    post:
      summary: Create a user
      operationId: createUser
      tags:
        - users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user
          in: body
          description: The skeleton object of the user to be created.
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: Newly created user.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}':
    get:
      summary: Info about a user
      operationId: getUser
      tags:
        - user
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user to retrieve.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Users'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices':
    post:
      summary: Create device for a user
      operationId: createDevice
      tags:
        - user
        - device
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user for which to create a device.
          type: string
        - name: device
          in: body
          required: true
          description: The device to be created for the user.
          schema:
            $ref: '#/definitions/Device'
      responses:
        '201':
          description: Representation of the newly created device for the user.
          schema:
            $ref: '#/definitions/Device'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    get:
      summary: Get all devices for a user
      operationId: getDevices
      tags:
        - user
        - device
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Devices'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/findByType':
    get:
      summary: Get all devices of specified type for a user
      operationId: getDevicesByType
      tags:
        - user
        - device
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceType
          in: query
          description: Type(s) to filter by
          required: true
          type: array
          items:
            type: string
            $ref: '#/definitions/DeviceType'
            default: MobileDevice
          collectionFormat: multi
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Devices'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/{deviceId}':
    get:
      summary: Info about a device of a user
      operationId: getDevice
      tags:
        - user
        - device
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Device'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    post:
      tags:
        - user
        - device
      summary: Update an existing device
      operationId: updateDevice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
        - in: body
          name: device
          description: Device object that needs to be updated
          required: true
          schema:
            $ref: "#/definitions/Device"
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
        # '400':
        #   description: "Invalid ID supplied"
        #   schema:
        #     $ref: '#/definitions/APIError'
        # '404':
        #   description: "Device not found"
        #   schema:
        #     $ref: '#/definitions/APIError'
        # '405':
        #   description: "Validation exception"
        #   schema:
        #     $ref: '#/definitions/APIError'
    delete:
      tags:
        - user
        - device
      summary: Delete an existing user's device
      operationId: deleteDevice
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/{deviceId}/matches':
    get:
      summary: Get matches for the device
      operationId: getMatches
      tags:
        - device
        - matches
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Matches'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/{deviceId}/publications':
    post:
      summary: Create a publication for a device for a user
      operationId: createPublication
      tags:
        - user
        - device
        - publication
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user to create a device for.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
        - name: publication
          in: body
          required: true
          schema:
            $ref: '#/definitions/Publication'
          description: |
            Publication to create on a device.
      responses:
        '201':
          description: |
            The representation of the newly created publication.
          schema:
            $ref: '#/definitions/Publication'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    get:
      summary: Get all publications for a device
      operationId: getPublications
      tags:
        - user
        - device
        - publication
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the device.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Publications'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/{deviceId}/publications/{publicationId}':
    get:
      summary: Info about a publication on a device of a user
      operationId: getPublication
      tags:
        - user
        - device
        - publication
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
        - name: publicationId
          in: path
          required: true
          description: The id (UUID) of the publication.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Publication'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    delete:
      tags:
        - user
        - device
        - publication
      summary: Delete a Publication
      description: ''
      operationId: deletePublication
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
        - name: publicationId
          in: path
          required: true
          description: The id (UUID) of the subscription.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/{deviceId}/subscriptions':
    post:
      summary: Create a subscription for a device for a user
      operationId: createSubscription
      tags:
        - user
        - device
        - subscription
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: |
            The id (UUID) of the user to create a device for.
        - name: deviceId
          in: path
          required: true
          type: string
          description: |
            The id (UUID) of the user device.
        - name: subscription
          required: true
          in: body
          description: |
            Subscription to create on a device.
          schema:
            $ref: '#/definitions/Subscription'
      responses:
        '201':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Subscription'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    get:
      summary: Get all subscriptions for a device
      operationId: getSubscriptions
      tags:
        - user
        - device
        - subscription
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the device.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Subscriptions'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/{deviceId}/subscriptions/{subscriptionId}':
    get:
      summary: Info about a subscription on a device of a user
      operationId: getSubscription
      tags:
        - user
        - device
        - subscription
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
        - name: subscriptionId
          in: path
          required: true
          description: The id (UUID) of the subscription.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Subscription'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    delete:
      tags:
        - user
        - device
        - subscription
      summary: Delete a Subscription
      description: ''
      operationId: deleteSubscription
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user of the device.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
        - name: subscriptionId
          in: path
          required: true
          description: The id (UUID) of the subscription.
          type: string
      responses:
        '200':
          description: Expected response to a valid request.
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/{deviceId}/locations':
    post:
      summary: Create a new location for a device
      operationId: createLocation
      tags:
        - user
        - device
        - location
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the device.
          type: string
        - name: location
          required: true
          in: body
          description: |
            Location to create for a device.
          schema:
            $ref: '#/definitions/Location'
      responses:
        '201':
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/Location'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/users/{userId}/devices/{deviceId}/proximityEvents':
    post:
      summary: Trigger the proximity event between a device and a ranged BLE iBeacon
      operationId: triggerProximityEvents
      tags:
        - user
        - device
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: The id (UUID) of the user for which to trigger a proximity event.
          type: string
        - name: deviceId
          in: path
          required: true
          description: The id (UUID) of the user device.
          type: string
        - name: proximityEvent
          in: body
          required: true
          description: The proximity event to be created for the user.
          schema:
            $ref: '#/definitions/ProximityEvent'
      responses:
        '201':
          description: Representation of the newly created proximity event for the user.
          schema:
            $ref: '#/definitions/ProximityEvent'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
definitions:
  User:
    type: object
    required:
      - id
      - createdAt
    description: |
      A user represents an anonymous user of the ALPS middleware.
      He/she can be connected via its mobile device or a user can
      be just an owner of Pin- or Beacon devices. A user issues
      publications and subscriptions for one of his associated
      devices, i.e. the publications and subscriptions
      belong to the particular device.
    properties:
      id:
        type: string
        readOnly: true
        description: The id (UUID) of the user.
      createdAt:
        type: integer
        format: int64
        readOnly: true
        description: |
          The timestamp of the user's creation in seconds since Jan 01 1970 (UTC).
      updatedAt:
        type: integer
        format: int64
        readOnly: true
        description: |
          The timestamp of the user's update in seconds since Jan 01 1970 (UTC).
      name:
        type: string
        description: The name of the user.
        default: ''
  Users:
    type: array
    items:
      $ref: '#/definitions/User'
  DeviceType:
    type: string
    description: |
      A device might be either virtual like a pin device or
      physical like a mobile phone or iBeacon device.
    enum:
        - MobileDevice
        - PinDevice
        - IBeaconDevice
  Device:
    type: object
    description: |
      A device might be either virtual like a pin device or
      physical like a mobile phone or iBeacon device.
    required:
      - id
      - deviceType
      - createdAt
    discriminator: deviceType
    properties:
      id:
        type: string
        description: The id (UUID) of the device.
        readOnly: true
      createdAt:
        type: integer
        format: int64
        readOnly: true
        description: |
          The timestamp of the device's creation in seconds since Jan 01 1970 (UTC).
      updatedAt:
        type: integer
        format: int64
        readOnly: true
        description: |
          The timestamp of the device's creation in seconds since Jan 01 1970 (UTC).
      name:
        type: string
        description: The name of the device.
        default: ''
      deviceType:
        $ref: '#/definitions/DeviceType'
  Devices:
    type: array
    items:
      $ref: '#/definitions/Device'
  Location:
    type: object
    required:
      - createdAt
      - latitude
      - longitude
      - altitude
    properties:
      createdAt:
        type: integer
        format: int64
        readOnly: true
        description: |
          The timestamp of the location creation in seconds since Jan 01 1970 (UTC).
      latitude:
        type: number
        format: double
        default: 0
        description: |
          The latitude of the device in degrees, for instance
          '46.5333' (Lausanne, Switzerland).
      longitude:
        type: number
        format: double
        default: 0
        description: |
          The longitude of the device in degrees, for instance
          '6.6667' (Lausanne, Switzerland).
      altitude:
        type: number
        format: double
        default: 0
        description: |
          The altitude of the device in meters, for instance '495.0' (Lausanne,
          Switzerland).
      horizontalAccuracy:
        type: number
        format: double
        default: 1
        description: |
          The horizontal accuracy of the location, measured on a
          scale from '0.0' to '1.0', '1.0' being the most
          accurate. If this value is not specified then the default
          value of '1.0' is used.
      verticalAccuracy:
        type: number
        format: double
        default: 1
        description: |
          The vertical accuracy of the location, measured on a scale from '0.0'
          to '1.0', '1.0' being the most accurate. If this value is not
          specified then the default value of '1.0' is used.
  Publication:
    type: object
    description: |
      A publication can be seen as a JavaMessagingService (JMS)
      publication extended with the notion of a geographical zone.
      The zone is defined as circle with a center at the given
      location and a range around that location.
    required:
      - id
      - deviceId
      - createdAt
      - topic
      - range
      - duration
      - properties
    properties:
      id:
        type: string
        readOnly: true
        description: The id (UUID) of the publication.
      createdAt:
        type: integer
        format: int64
        readOnly: true
        description: |
          The timestamp of the publication creation in seconds since Jan 01 1970 (UTC).
      deviceId:
        type: string
        description: The id (UUID) of the device to attach a publication to.
      topic:
        type: string
        description: |
          The topic of the publication. This will act as a first match filter.
          For a subscription to be able to match a publication they must have
          the exact same topic.
      range:
        type: number
        format: double
        description: |
          The range of the publication in meters. This is the range around the
          device holding the publication in which matches with subscriptions can
          be triggered.
      duration:
        type: number
        format: double
        description: |
          The duration of the publication in seconds. If set to '-1' the
          publication will live forever and if set to '0' it will be instant at
          the time of publication.
      properties:
        type: object
        additionalProperties:
          type: string
        description: 'The dictionary of key, value pairs.'
  Publications:
    type: array
    items:
      $ref: '#/definitions/Publication'
  Subscription:
    type: object
    description: |
      A subscription can be seen as a JMS subscription extended
      with the notion of geographical zone. The zone again being
      defined as circle with a center at the given location and a range
      around that location.
    required:
      - id
      - deviceId
      - createdAt
      - topic
      - selector
      - range
      - duration
    properties:
      id:
        type: string
        readOnly: true
        description: The id (UUID) of the subscription.
      createdAt:
        type: integer
        format: int64
        readOnly: true
        description: |
          The timestamp of the subscription creation in seconds since Jan 01 1970 (UTC).
      deviceId:
        type: string
        description: The id (UUID) of the device to attach a subscription to.
      topic:
        type: string
        description: |
          The topic of the subscription. This will act as a first match filter.
          For a subscription to be able to match a publication they must have
          the exact same topic.
      selector:
        type: string
        description: |
          This is an expression to filter the publications. For instance
          'job='developer'' will allow matching only with publications
          containing a 'job' key with a value of 'developer'.
      range:
        type: number
        format: double
        description: |
          The range of the subscription in meters. This is the range around the
          device holding the subscription in which matches with publications can
          be triggered.
      duration:
        type: number
        format: double
        description: |
          The duration of the subscription in seconds. If set to '-1' the
          subscription will live forever and if set to '0' it will be instant at
          the time of subscription.
      pushers:
        type: array
        description: |
          When match will occurs,
          they will be notified on these provided URI(s) address(es) in the pushers array.
        items:
          type: string
  Subscriptions:
    type: array
    items:
      $ref: '#/definitions/Subscription'
  Match:
    type: object
    description: An object representing a match between a subscription and a publication.
    required:
      - id
      - createdAt
      - publication
      - subscription
    properties:
      id:
        type: string
        readOnly: true
        description: The id (UUID) of the user.
      createdAt:
        type: integer
        format: int64
        readOnly: true
        description: The timestamp of the match in seconds since Jan 01 1970 (UTC).
      publication:
        $ref: '#/definitions/Publication'
      subscription:
        $ref: '#/definitions/Subscription'
  Matches:
    type: array
    items:
      $ref: '#/definitions/Match'
  APIError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  MobileDevice:
    type: object
    description: |
      A mobile device is one that potentially moves together with its
      user and therefore has a geographical location associated with it.
    allOf:
      - $ref: '#/definitions/Device'
      - required:
          - platform
          - deviceToken
          - location
        properties:
          platform:
            type: string
            description: |
              The platform of the device, this can be any string
              representing the platform type, for instance 'iOS'.
          deviceToken:
            type: string
            description: |
              The deviceToken is the device push notification token
              given to this device by the OS, either iOS or Android for
              identifying the device with push notification
              services.
          location:
            "$ref": "#/definitions/Location"
  PinDevice:
    type: object
    description: |
      A pin device is one that has geographical location associated with
      it but is not represented by any object in the physical world.
    allOf:
      - $ref: '#/definitions/Device'
      - required:
          - location
        properties:
          location:
            "$ref": "#/definitions/Location"
  IBeaconDevice:
    type: object
    description: |
      An iBeacon device represents an Apple conform iBeacon announcing
      its presence via Bluetooth advertising packets.
    allOf:
        - $ref: '#/definitions/Device'
        - required:
            - proximityUUID
            - major
            - minor
          properties:
            proximityUUID:
              type: string
              description: |
                The UUID of the beacon, the purpose is to distinguish iBeacons
                in your network, from all other beacons in
                networks outside your control.
            major:
              type: integer
              description: |
                Major values are intended to identify and
                distinguish a group.
              format: int32
              minimum: 0
              exclusiveMinimum: false
              maximum: 65535
              exclusiveMaximum: false
            minor:
              type: integer
              description: |
                Minor values are intended to identify and
                distinguish an individual.
              format: int32
              minimum: 0
              exclusiveMinimum: false
              maximum: 65535
              exclusiveMaximum: false
  ProximityEvent:
    type: object
    description: |
      A proximity event is triggered to the core when a mobile device detects
      an iBeacon device in his Bluetooth Low Energy(BLE) range.
    required:
      - id
      - createdAt
      - deviceId
      - distance
    properties:
      id:
        type: string
        description: The id (UUID) of the proximity event.
        readOnly: true
      createdAt:
        type: integer
        format: int64
        readOnly: true
        description: The timestamp of the proximity event in seconds since Jan 01 1970 (UTC).
      deviceId:
        type: string
        description: The id (UUID) of the iBeacon to trigger a proximity event to.
      distance:
        type: number
        format: double
        description : |
          Distance between the mobile device that trigger the proximity event
          and the ranged iBeacon. This distance is automatically generated by the SDK
          based upon the CLProximity.
