swagger: '2.0'
schemes:
  - https
host: api.matchmore.io
basePath: /
info:
  description: |
    ## MATCHMORE admin
    The admin portal

    ## RESTful API
    We do our best to have all our URLs be
    [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer).
    Every endpoint (URL) may support one of four different http verbs. GET
    requests fetch information about an object, POST requests create objects,
    PUT requests update objects, and finally DELETE requests will delete
    objects.

    ## [More about MATCHMORE](https://matchmore.io)

  version: '0.5.0'

  title: MATCHMORE ALPS Amin REST API

  termsOfService: 'https://matchmore.io/about/legal/terms/api'
  contact:
    email: support@matchmore.com
    url: 'https://matchmore.io'
  license:
    name: MIT
  x-logo:
    url: 'https://matchmore.io/static/img/logo/logo_marina_trans_beta.png'
externalDocs:
  description: MatchMore Developer Documentation
  url: 'https://matchmore.io/'
consumes:
  - application/json
produces:
  - application/json
tags:
  - name : world
    description : Manage worlds
securityDefinitions:
  api-key:
    type: apiKey
    in: header
    name: api-key
paths:
  '/admin/v5/worlds':
    post:
      summary: Creates world
      operationId: createWorld
      tags:
        - world
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: world
          in: body
          required: true
          description: The world to be created.
          schema:
            $ref: '#/definitions/World'
      responses:
        '201':
          description: Indication that the world was successfully created.
          schema:
            $ref: '#/definitions/World'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/admin/v5/worlds/{worldId}':
    put:
      summary: Set device limit for world
      operationId: setDeviceLimit
      tags:
        - world
      consumes:
        - application/json
      parameters:
        - name: worldId
          in: path
          type: string
          required: true
          description: "The id (UUID) of the world."
        - name: world
          in: body
          required: true
          description: The world data to update.
          schema:
            $ref: '#/definitions/WorldUpdate'
      responses:
        '200':
          description: Expected response to a valid request.
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    delete:
      summary: Delete world and all of its devices
      operationId: deleteWorld
      tags:
        - world
      parameters:
        - name: worldId
          in: path
          type: string
          required: true
          description: "The id (UUID) of the world."
      responses:
        '200':
          description: Expected response to a valid request.
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
  '/admin/v5/worlds/{worldId}/pusher/config/apns':
    post:
      summary: Upload APNS cert
      operationId: apntCertUpload
      tags:
        - config
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - name: worldId
          in: path
          type: string
          required: true
          description: "The id (UUID) of the world."
        - name: cert
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '201':
          description: APNS cert succesfully uploaded.
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    delete:
      summary: Deletes the current APNS cert
      operationId: apntCertDelete
      parameters:
        - name: worldId
          in: path
          type: string
          required: true
          description: "The id (UUID) of the world."
      tags:
        - config
      responses:
        '200':
          description: Certificate succesfully deleted
  '/admin/v5/worlds/{worldId}/pusher/config':
    get:
      summary: Current config
      operationId: config
      parameters:
        - name: worldId
          in: path
          type: string
          required: true
          description: "The id (UUID) of the world."
      tags:
        - config
      produces:
        - application/json
      responses:
        '200':
          description: Flags of current configs
          schema:
            $ref: '#/definitions/CurrentConfig'
  '/admin/v5/worlds/{worldId}/pusher/config/fcm':
    post:
      summary: FCM config
      description: Applies the FCM server key to the app. Please note that you need to provide the legacy server key.
      operationId: fcmServerKey
      tags:
        - config
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: worldId
          in: path
          type: string
          required: true
          description: "The id (UUID) of the world."
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FCM'
      responses:
        '201':
          description: Config succesfully applied.
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
    delete:
      summary: Deletes the current FCM config
      operationId: fcmServerKeyDelete
      parameters:
        - name: worldId
          in: path
          type: string
          required: true
          description: "The id (UUID) of the world."
      tags:
        - config
      responses:
        '200':
          description: Config deleted
definitions:
  FCM:
    type: object
    required:
      - serverKey
    properties:
      serverKey:
        type: string
        description: |
          the server key from firebase cloud messaging which can be found here
  World:
    type: object
    required:
      - id
      - name
      - limit
      - pushers
    properties:
      id:
        type: string
        description: 'world UUID'
      name:
        type: string
        description: 'world name'
      limit:
        type: number
        description: 'maximal number of devices that can be created in the world'
      pushers:
        type: array
        items:
          type: string
          description: 'pushers used to deliver match notifications for this world'
  WorldUpdate:
    type: object
    required:
      - limit
    properties:
      limit:
        type: number
        description: 'maximal number of devices that can be created in the world'
  CurrentConfig:
    type: object
    properties:
      apns: 
        type: boolean
      fcm: 
        type: boolean
      pusher.com: 
        type: boolean
      websocket: 
        type: boolean
      http:
        type: boolean
  APIError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
