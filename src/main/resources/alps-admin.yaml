swagger: '2.0'
schemes:
  - https
host: api.matchmore.io
basePath: /v4
info:
  description: |
    ## MATCHMORE admin
    The admin portal 

    ## RESTful API
    We do our best to have all our URLs be
    [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer).
    Every endpoint (URL) may support one of four different http verbs. GET
    requests fetch information about an object, POST requests create objects,
    PUT requests update objects, and finally DELETE requests will delete
    objects.

    ## [More about MATCHMORE](https://dev.matchmore.io)

  version: '0.4.0'

  title: MATCHMORE ALPS Amin REST API

  termsOfService: 'https://dev.matchmore.io/about/legal/terms/api'
  contact:
    email: apihelp@matchmore.com
    url: 'https://dev.matchmore.io/corporate'
  license:
    name: MIT
  x-logo:
    url: 'https://dev.matchmore.io/static/img/logo/logo_marina_trans_beta.png'
externalDocs:
  description: MatchMore Developer Documentation
  url: 'https://dev.matchmore.com/'
consumes:
  - application/json
produces:
  - application/json
tags:
  - name : world
    description : Manage worlds
securityDefinitions:
  api-key:
    type: apiKey
    in: header
    name: api-key
paths:
  /admin/apps:
    post:
      summary: Creates world
      operationId: createWorld
      tags:
        - world
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: name
          in: formdata
          description: |
          
            Name of the world
          required: true
          type: string
        - name: pusherendpoint
          in: formdata
          description: |
          
            Main pusher endpoint in this world
          required: true
          type: string
      responses:
        '201':
          description: Indication that the world was successfully created.
          schema:
            $ref: '#/definitions/World'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/APIError'
definitions:
  World:
    type: object
    required:
      - id
      - name
      - pushers
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
      pushers:
        type: array
        items: 
          type: string
  APIError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  